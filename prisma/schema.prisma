// This is your Prisma schema file
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Ayarlar {
  id        Int      @id @default(autoincrement()) @map("AyarID")
  anahtar   String   @unique @map("Anahtar") @db.VarChar(100)
  deger     String   @map("Deger") @db.Text
  aciklama  String?  @map("Aciklama") @db.Text

  @@map("Ayarlar")
}

model Musteriler {
  id            Int             @id @default(autoincrement()) @map("MusteriID")
  musteriTipi   String         @map("MusteriTipi") @db.VarChar(50) // "BIREYSEL" veya "KURUMSAL"
  // Bireysel müşteri alanları
  ad            String?        @map("Ad") @db.VarChar(100)
  soyad         String?        @map("Soyad") @db.VarChar(100)
  tcKimlik      String?        @map("TCKimlik") @db.VarChar(11)
  // Kurumsal müşteri alanları
  firmaAdi      String?        @map("FirmaAdi") @db.VarChar(200)
  vergiDairesi  String?        @map("VergiDairesi") @db.VarChar(100)
  vergiNo       String?        @map("VergiNo") @db.VarChar(20)
  // Ortak alanlar
  telefon       String?        @map("Telefon") @db.VarChar(20)
  email         String?        @map("Email") @db.VarChar(100)
  adres         String?        @map("Adres") @db.Text
  kayitTarihi   DateTime       @default(now()) @map("KayitTarihi")
  // İlişkiler
  kullaniciId   Int           @map("KullaniciID") // Kaydı oluşturan kullanıcı
  kullanici     Kullanicilar  @relation("KaydedenKullanici", fields: [kullaniciId], references: [id])
  temsilciId    Int?          @map("TemsilciID") // Müşteri temsilcisi
  temsilci      Kullanicilar? @relation("MusteriTemsilcisi", fields: [temsilciId], references: [id])
  ilgiliKisiler IlgiliKisiler[]
  teklifler     Teklifler[]
  etkinlikler   Etkinlikler[]
  firsatlar     Firsatlar[]

  @@index([kullaniciId])
  @@index([temsilciId])
  @@map("Musteriler")
}

model IlgiliKisiler {
  id          Int       @id @default(autoincrement()) @map("IlgiliKisiID")
  musteriId   Int       @map("MusteriID")
  ad          String    @map("Ad") @db.VarChar(100)
  soyad       String?   @map("Soyad") @db.VarChar(100)
  unvan       String?   @map("Unvan") @db.VarChar(100)
  telefon     String?   @map("Telefon") @db.VarChar(20)
  email       String?   @map("Email") @db.VarChar(100)
  musteri     Musteriler @relation(fields: [musteriId], references: [id])
  etkinlikler Etkinlikler[] @relation("EtkinlikIlgiliKisi")

  @@map("IlgiliKisiler")
}

model Teklifler {
  id                  Int               @id @default(autoincrement()) @map("TeklifID")
  musteriId           Int               @map("MusteriID")
  teklifNo            String            @unique @map("TeklifNo") @db.VarChar(50)
  baslik              String            @map("Baslik") @db.VarChar(200)
  aciklama            String?           @map("Aciklama") @db.Text
  toplamTutar         Decimal           @map("ToplamTutar") @db.Decimal(10, 2)
  paraBirimi          String            @map("ParaBirimi") @db.VarChar(10)
  durum               String            @map("Durum") @db.VarChar(50)
  olusturmaTarihi     DateTime          @default(now()) @map("OlusturmaTarihi")
  sonGecerlilikTarihi DateTime          @map("SonGecerlilikTarihi")
  kullaniciId         Int               @map("KullaniciID")
  revizyon            Int               @default(1) @map("Revizyon")
  notlar              String?           @map("Notlar") @db.Text
  musteri             Musteriler        @relation(fields: [musteriId], references: [id], onDelete: Cascade)
  kullanici           Kullanicilar      @relation(fields: [kullaniciId], references: [id])
  teklifKalemleri     TeklifKalemleri[]
  teklifDosyalari     TeklifDosyalari[]

  @@index([musteriId])
  @@index([kullaniciId])
  @@map("Teklifler")
}

model TeklifKalemleri {
  id          Int       @id @default(autoincrement()) @map("KalemID")
  teklifId    Int       @map("TeklifID")
  urunId      Int?      @map("UrunID")
  hizmetId    Int?      @map("HizmetID")
  kalemTipi   String    @map("KalemTipi") @db.VarChar(20)
  miktar      Int       @map("Miktar")
  birim       String    @map("Birim") @db.VarChar(20)
  birimFiyat  Decimal   @map("BirimFiyat") @db.Decimal(10, 2)
  kdvOrani    Int       @map("KDVOrani")
  aciklama    String?   @map("Aciklama") @db.Text
  teklif      Teklifler @relation(fields: [teklifId], references: [id], onDelete: Cascade)
  urun        Urunler?  @relation(fields: [urunId], references: [id])
  hizmet      Hizmetler? @relation(fields: [hizmetId], references: [id])

  @@index([teklifId])
  @@index([urunId])
  @@index([hizmetId])
  @@map("TeklifKalemleri")
}

model Roller {
  id          Int           @id @default(autoincrement()) @map("RolID")
  rolAdi      String        @unique @map("RolAdi") @db.VarChar(100)
  yetkiler    String?       @map("Yetkiler") @db.Text
  kullanicilar Kullanicilar[]

  @@map("Roller")
}

model Kullanicilar {
  id              Int           @id @default(autoincrement()) @map("KullaniciID")
  ad              String        @map("Ad") @db.VarChar(100)
  soyad           String        @map("Soyad") @db.VarChar(100)
  email           String        @unique @map("Email") @db.VarChar(100)
  sifreHash       String        @map("SifreHash") @db.VarChar(255)
  rolId           Int           @map("RolID")
  rol             Roller        @relation(fields: [rolId], references: [id])
  kayitliMusteriler Musteriler[] @relation("KaydedenKullanici")
  temsilciMusteriler Musteriler[] @relation("MusteriTemsilcisi")
  etkinlikler     Etkinlikler[]
  teklifler       Teklifler[]
  islemGecmisi    IslemGecmisi[]

  @@map("Kullanicilar")
}

enum EtkinlikTipi {
  CARI_HESAP_BILGILERI     @map("Cari Hesap Bilgileri")
  FATURA_KESILECEK         @map("Fatura Kesilecek")
  GELEN_EPOSTA             @map("Gelen E-posta")
  GIDEN_EPOSTA             @map("Giden E-posta")
  IMALAT                   @map("İmalat")
  ISEMRI_OLUSTURULACAK     @map("İşemri Oluşturulacak")
  KESIF                    @map("Keşif")
  MONTAJ                   @map("Montaj")
  MUSTERI_ZIYARET          @map("Müşteri Ziyaret")
  NUMUNE_GONDERIMI         @map("Numune Gönderimi")
  PRIM_HAKEDISI           @map("Prim Hakedişi")
  PROJE_CIZIM             @map("Proje Çizim")
  PROJE_INCELEME          @map("Proje İnceleme")
  SEVKIYAT                @map("Sevkiyat")
  SIKAYET_ARIZA_SERVIS    @map("Şikayet/Arıza/Servis")
  TAHSILAT_TAKIBI         @map("Tahsilat Takibi")
  TEKLIF_DURUM_TAKIBI     @map("Teklif Durum Takibi")
  TEKLIF_GONDERIM_ONAYI   @map("Teklif Gönderim Onayı")
  TEKLIF_ONAY_TALEBI      @map("Teklif Onay Talebi")
  TEKLIF_VERILECEK        @map("Teklif Verilecek")
  TEKNIK_SERVIS           @map("Teknik Servis")
  TELEFON_GORUSMESI       @map("Telefon Görüşmesi")
  TOPLANTI                @map("Toplantı")
  TOPLU_EPOSTA            @map("Toplu E-posta")
}

model Etkinlikler {
  id              Int          @id @default(autoincrement()) @map("EtkinlikID")
  musteriId       Int          @map("MusteriID")
  ilgiliKisiId    Int?         @map("IlgiliKisiID")
  etkinlikTipi    EtkinlikTipi @map("EtkinlikTipi")
  baslangicTarihi DateTime     @map("BaslangicTarihi")
  bitisTarihi     DateTime?    @map("BitisTarihi")
  aciklama        String?      @map("Aciklama") @db.Text
  durum           String       @map("Durum") @default("BEKLIYOR")
  oncelik         String       @map("Oncelik") @default("NORMAL")
  kullaniciId     Int          @map("KullaniciID")
  musteri         Musteriler   @relation(fields: [musteriId], references: [id])
  ilgiliKisi      IlgiliKisiler? @relation("EtkinlikIlgiliKisi", fields: [ilgiliKisiId], references: [id])
  kullanici       Kullanicilar @relation(fields: [kullaniciId], references: [id])

  @@index([musteriId])
  @@index([ilgiliKisiId])
  @@index([kullaniciId])
  @@map("Etkinlikler")
}

model Asamalar {
  id          Int         @id @default(autoincrement()) @map("AsamaID")
  asamaAdi    String      @map("AsamaAdi") @db.VarChar(100)
  sira        Int         @map("Sira")
  firsatlar   Firsatlar[]

  @@map("Asamalar")
}

model Firsatlar {
  id                  Int       @id @default(autoincrement()) @map("FirsatID")
  musteriId           Int       @map("MusteriID")
  baslik              String    @map("Baslik") @db.VarChar(200)
  beklenenKapanisTarihi DateTime? @map("BeklenenKapanisTarihi")
  asamaId             Int       @map("AsamaID")
  olasilik            Decimal   @map("Olasilik") @db.Decimal(5,2)
  musteri             Musteriler @relation(fields: [musteriId], references: [id])
  asama               Asamalar   @relation(fields: [asamaId], references: [id])

  @@map("Firsatlar")
}

model TeklifDosyalari {
  id            Int       @id @default(autoincrement()) @map("DosyaID")
  teklifId      Int       @map("TeklifID")
  dosyaAdi      String    @map("DosyaAdi") @db.VarChar(255)
  dosyaYolu     String    @map("DosyaYolu") @db.VarChar(255)
  yuklemeTarihi DateTime  @default(now()) @map("YuklemeTarihi")
  teklif        Teklifler @relation(fields: [teklifId], references: [id], onDelete: Cascade)

  @@index([teklifId])
  @@map("TeklifDosyalari")
}

model IslemGecmisi {
  id                Int           @id @default(autoincrement()) @map("LogID")
  tabloAdi          String        @map("TabloAdi") @db.VarChar(100)
  kayitId           Int           @map("KayitID")
  degisiklikDetayi  String        @map("DegisiklikDetayi") @db.Text
  tarih             DateTime      @default(now()) @map("Tarih")
  kullaniciId       Int           @map("KullaniciID")
  kullanici         Kullanicilar  @relation(fields: [kullaniciId], references: [id])

  @@map("IslemGecmisi")
}

model UrunHizmetGruplari {
  id          Int       @id @default(autoincrement()) @map("GrupID")
  grupTipi    String    @map("GrupTipi") @db.VarChar(20) // "URUN" veya "HIZMET"
  grupKodu    String    @unique @map("GrupKodu") @db.VarChar(50)
  grupAdi     String    @map("GrupAdi") @db.VarChar(200)
  aciklama    String?   @map("Aciklama") @db.Text
  aktif       Boolean   @default(true) @map("Aktif")
  sira        Int       @default(0) @map("Sira")
  ustGrupId   Int?      @map("UstGrupID")
  ustGrup     UrunHizmetGruplari? @relation("UstAltGrup", fields: [ustGrupId], references: [id])
  altGruplar  UrunHizmetGruplari[] @relation("UstAltGrup")
  urunler     Urunler[]
  hizmetler   Hizmetler[]

  @@map("UrunHizmetGruplari")
}

model Urunler {
  id          Int       @id @default(autoincrement()) @map("UrunID")
  urunKodu    String    @unique @map("UrunKodu") @db.VarChar(50)
  urunAdi     String    @map("UrunAdi") @db.VarChar(200)
  grupId      Int       @map("GrupID")
  grup        UrunHizmetGruplari @relation(fields: [grupId], references: [id])
  birim       String    @map("Birim") @db.VarChar(20)
  birimFiyat  Decimal   @map("BirimFiyat") @db.Decimal(10, 2)
  kdvOrani    Int       @map("KDVOrani")
  aciklama    String?   @map("Aciklama") @db.Text
  aktif       Boolean   @default(true) @map("Aktif")
  olusturmaTarihi DateTime @default(now()) @map("OlusturmaTarihi")
  guncellenmeTarihi DateTime @updatedAt @map("GuncellenmeTarihi")
  teklifKalemleri TeklifKalemleri[]

  @@index([grupId])
  @@map("Urunler")
}

model Hizmetler {
  id          Int       @id @default(autoincrement()) @map("HizmetID")
  hizmetKodu  String    @unique @map("HizmetKodu") @db.VarChar(50)
  hizmetAdi   String    @map("HizmetAdi") @db.VarChar(200)
  grupId      Int       @map("GrupID")
  grup        UrunHizmetGruplari @relation(fields: [grupId], references: [id])
  birim       String    @map("Birim") @db.VarChar(20)
  birimFiyat  Decimal   @map("BirimFiyat") @db.Decimal(10, 2)
  kdvOrani    Int       @map("KDVOrani")
  aciklama    String?   @map("Aciklama") @db.Text
  aktif       Boolean   @default(true) @map("Aktif")
  olusturmaTarihi DateTime @default(now()) @map("OlusturmaTarihi")
  guncellenmeTarihi DateTime @updatedAt @map("GuncellenmeTarihi")
  teklifKalemleri TeklifKalemleri[]

  @@index([grupId])
  @@map("Hizmetler")
} 